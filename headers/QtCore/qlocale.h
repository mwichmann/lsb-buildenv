#ifndef _QTCORE_QLOCALE_H_
#define _QTCORE_QLOCALE_H_

#include <QtCore/qglobal.h>
#include <QtCore/qchar.h>
#include <QtCore/qstring.h>
#include <QtCore/qdatastream.h>

#ifdef __cplusplus
extern "C" {
#endif




    Unknown Type:".Class.";

    enum N7QLocale8LanguageE {
	C,
	Abkhazian,
	Afan,
	Afar,
	Afrikaans,
	Albanian,
	Amharic,
	Arabic,
	Armenian,
	Assamese,
	Aymara,
	Azerbaijani,
	Bashkir,
	Basque,
	Bengali,
	Bhutani,
	Bihari,
	Bislama,
	Breton,
	Bulgarian,
	Burmese,
	Byelorussian,
	Cambodian,
	Catalan,
	Chinese,
	Corsican,
	Croatian,
	Czech,
	Danish,
	Dutch,
	English,
	Esperanto,
	Estonian,
	Faroese,
	FijiLanguage,
	Finnish,
	French,
	Frisian,
	Gaelic,
	Galician,
	Georgian,
	German,
	Greek,
	Greenlandic,
	Guarani,
	Gujarati,
	Hausa,
	Hebrew,
	Hindi,
	Hungarian,
	Icelandic,
	Indonesian,
	Interlingua,
	Interlingue,
	Inuktitut,
	Inupiak,
	Irish,
	Italian,
	Japanese,
	Javanese,
	Kannada,
	Kashmiri,
	Kazakh,
	Kinyarwanda,
	Kirghiz,
	Korean,
	Kurdish,
	Kurundi,
	Laothian,
	Latin,
	Latvian,
	Lingala,
	Lithuanian,
	Macedonian,
	Malagasy,
	Malay,
	Malayalam,
	Maltese,
	Maori,
	Marathi,
	Moldavian,
	Mongolian,
	NauruLanguage,
	Nepali,
	Norwegian,
	Occitan,
	Oriya,
	Pashto,
	Persian,
	Polish,
	Portuguese,
	Punjabi,
	Quechua,
	RhaetoRomance,
	Romanian,
	Russian,
	Samoan,
	Sangho,
	Sanskrit,
	Serbian,
	SerboCroatian,
	Sesotho,
	Setswana,
	Shona,
	Sindhi,
	Singhalese,
	Siswati,
	Slovak,
	Slovenian,
	Somali,
	Spanish,
	Sundanese,
	Swahili,
	Swedish,
	Tagalog,
	Tajik,
	Tamil,
	Tatar,
	Telugu,
	Thai,
	Tibetan,
	Tigrinya,
	TongaLanguage,
	Tsonga,
	Turkish,
	Turkmen,
	Twi,
	Uigur,
	Ukrainian,
	Urdu,
	Uzbek,
	Vietnamese,
	Volapuk,
	Welsh,
	Wolof,
	Xhosa,
	Yiddish,
	Yoruba,
	Zhuang,
	Zulu,
	Nynorsk,
	Bosnian,
	Divehi,
	Manx,
	Cornish,
	LastLanguage
    };

    enum N7QLocale7CountryE {
	AnyCountry,
	Afghanistan,
	Albania,
	Algeria,
	AmericanSamoa,
	Andorra,
	Angola,
	Anguilla,
	Antarctica,
	AntiguaAndBarbuda,
	Argentina,
	Armenia,
	Aruba,
	Australia,
	Austria,
	Azerbaijan,
	Bahamas,
	Bahrain,
	Bangladesh,
	Barbados,
	Belarus,
	Belgium,
	Belize,
	Benin,
	Bermuda,
	Bhutan,
	Bolivia,
	BosniaAndHerzegowina,
	Botswana,
	BouvetIsland,
	Brazil,
	BritishIndianOceanTerritory,
	BruneiDarussalam,
	Bulgaria,
	BurkinaFaso,
	Burundi,
	Cambodia,
	Cameroon,
	Canada,
	CapeVerde,
	CaymanIslands,
	CentralAfricanRepublic,
	Chad,
	Chile,
	China,
	ChristmasIsland,
	CocosIslands,
	Colombia,
	Comoros,
	DemocraticRepublicOfCongo,
	PeoplesRepublicOfCongo,
	CookIslands,
	CostaRica,
	IvoryCoast,
	Croatia,
	Cuba,
	Cyprus,
	CzechRepublic,
	Denmark,
	Djibouti,
	Dominica,
	DominicanRepublic,
	EastTimor,
	Ecuador,
	Egypt,
	ElSalvador,
	EquatorialGuinea,
	Eritrea,
	Estonia,
	Ethiopia,
	FalklandIslands,
	FaroeIslands,
	FijiCountry,
	Finland,
	France,
	MetropolitanFrance,
	FrenchGuiana,
	FrenchPolynesia,
	FrenchSouthernTerritories,
	Gabon,
	Gambia,
	Georgia,
	Germany,
	Ghana,
	Gibraltar,
	Greece,
	Greenland,
	Grenada,
	Guadeloupe,
	Guam,
	Guatemala,
	Guinea,
	GuineaBissau,
	Guyana,
	Haiti,
	HeardAndMcDonaldIslands,
	Honduras,
	HongKong,
	Hungary,
	Iceland,
	India,
	Indonesia,
	Iran,
	Iraq,
	Ireland,
	Israel,
	Italy,
	Jamaica,
	Japan,
	Jordan,
	Kazakhstan,
	Kenya,
	Kiribati,
	DemocraticRepublicOfKorea,
	RepublicOfKorea,
	Kuwait,
	Kyrgyzstan,
	Lao,
	Latvia,
	Lebanon,
	Lesotho,
	Liberia,
	LibyanArabJamahiriya,
	Liechtenstein,
	Lithuania,
	Luxembourg,
	Macau,
	Macedonia,
	Madagascar,
	Malawi,
	Malaysia,
	Maldives,
	Mali,
	Malta,
	MarshallIslands,
	Martinique,
	Mauritania,
	Mauritius,
	Mayotte,
	Mexico,
	Micronesia,
	Moldova,
	Monaco,
	Mongolia,
	Montserrat,
	Morocco,
	Mozambique,
	Myanmar,
	Namibia,
	NauruCountry,
	Nepal,
	Netherlands,
	NetherlandsAntilles,
	NewCaledonia,
	NewZealand,
	Nicaragua,
	Niger,
	Nigeria,
	Niue,
	NorfolkIsland,
	NorthernMarianaIslands,
	Norway,
	Oman,
	Pakistan,
	Palau,
	PalestinianTerritory,
	Panama,
	PapuaNewGuinea,
	Paraguay,
	Peru,
	Philippines,
	Pitcairn,
	Poland,
	Portugal,
	PuertoRico,
	Qatar,
	Reunion,
	Romania,
	RussianFederation,
	Rwanda,
	SaintKittsAndNevis,
	StLucia,
	StVincentAndTheGrenadines,
	Samoa,
	SanMarino,
	SaoTomeAndPrincipe,
	SaudiArabia,
	Senegal,
	Seychelles,
	SierraLeone,
	Singapore,
	Slovakia,
	Slovenia,
	SolomonIslands,
	Somalia,
	SouthAfrica,
	SouthGeorgiaAndTheSouthSandwichIslands,
	Spain,
	SriLanka,
	StHelena,
	StPierreAndMiquelon,
	Sudan,
	Suriname,
	SvalbardAndJanMayenIslands,
	Swaziland,
	Sweden,
	Switzerland,
	SyrianArabRepublic,
	Taiwan,
	Tajikistan,
	Tanzania,
	Thailand,
	Togo,
	Tokelau,
	TongaCountry,
	TrinidadAndTobago,
	Tunisia,
	Turkey,
	Turkmenistan,
	TurksAndCaicosIslands,
	Tuvalu,
	Uganda,
	Ukraine,
	UnitedArabEmirates,
	UnitedKingdom,
	UnitedStates,
	UnitedStatesMinorOutlyingIslands,
	Uruguay,
	Uzbekistan,
	Vanuatu,
	VaticanCityState,
	Venezuela,
	VietNam,
	BritishVirginIslands,
	USVirginIslands,
	WallisAndFutunaIslands,
	WesternSahara,
	Yemen,
	Yugoslavia,
	Zambia,
	Zimbabwe,
	SerbiaAndMontenegro,
	LastCountry
    };

    enum N7QLocale10FormatTypeE {
	LongFormat,
	ShortFormat
    };


    extern Class _ZN7QLocaleC2Ev(void);
    extern Class _ZN7QLocaleC1Ev(void);
    extern Class _ZN7QLocaleC2ERK7QString(void);
    extern Class _ZN7QLocaleC1ERK7QString(void);
    extern Class _ZN7QLocaleC2ENS_8LanguageENS_7CountryE(void);
    extern Class _ZN7QLocaleC1ENS_8LanguageENS_7CountryE(void);
    extern Class _ZN7QLocaleC2ERKS_(void);
    extern Class _ZN7QLocaleC1ERKS_(void);
    extern Class _ZN7QLocaleaSERKS_(void);
    extern enum N7QLocale8LanguageE _ZNK7QLocale8languageEv(void);
    extern enum N7QLocale7CountryE _ZNK7QLocale7countryEv(void);
    extern Class _ZNK7QLocale4nameEv(void);
    extern short _ZNK7QLocale7toShortERK7QStringPbi(void);
    extern ushort _ZNK7QLocale8toUShortERK7QStringPbi(void);
    extern int _ZNK7QLocale5toIntERK7QStringPbi(void);
    extern uint _ZNK7QLocale6toUIntERK7QStringPbi(void);
    extern qlonglong _ZNK7QLocale10toLongLongERK7QStringPbi(void);
    extern qlonglong _ZNK7QLocale11toULongLongERK7QStringPbi(void);
    extern float _ZNK7QLocale7toFloatERK7QStringPb(void);
    extern double _ZNK7QLocale8toDoubleERK7QStringPb(void);
    extern Class _ZNK7QLocale8toStringEx(void);
    extern Class _ZNK7QLocale8toStringEy(void);
    extern Class _ZNK7QLocale8toStringEdci(void);
    extern Class _ZNK7QLocale8toStringERK5QDateRK7QString(void);
    extern Class _ZNK7QLocale8toStringERK5QDateNS_10FormatTypeE(void);
    extern Class _ZNK7QLocale8toStringERK5QTimeRK7QString(void);
    extern Class _ZNK7QLocale8toStringERK5QTimeNS_10FormatTypeE(void);
    extern Class _ZNK7QLocale10dateFormatENS_10FormatTypeE(void);
    extern Class _ZNK7QLocale10timeFormatENS_10FormatTypeE(void);
    extern Class _ZNK7QLocale12decimalPointEv(void);
    extern Class _ZNK7QLocale14groupSeparatorEv(void);
    extern Class _ZNK7QLocale7percentEv(void);
    extern Class _ZNK7QLocale9zeroDigitEv(void);
    extern Class _ZNK7QLocale12negativeSignEv(void);
    extern Class _ZNK7QLocale11exponentialEv(void);
    extern Class _ZN7QLocale16languageToStringENS_8LanguageE(void);
    extern Class _ZN7QLocale15countryToStringENS_7CountryE(void);
    extern void _ZN7QLocale10setDefaultERKS_(void);
    extern Class _ZN7QLocale6systemEv(void);
    extern Class _ZlsR11QDataStreamRK7QLocale(void);
    extern Class _ZrsR11QDataStreamR7QLocale(void);
#ifdef __cplusplus
}
#endif
#endif

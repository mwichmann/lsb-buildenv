
#define G_TYPE_INET_SOCKET_ADDRESS	(g_inet_socket_address_get_type ())
#define G_INET_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddressClass))
#define G_IS_INET_SOCKET_ADDRESS_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_INET_SOCKET_ADDRESS))
#define G_INET_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddress))
#define G_IS_INET_SOCKET_ADDRESS(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_INET_SOCKET_ADDRESS))
#define G_INET_SOCKET_ADDRESS_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_INET_SOCKET_ADDRESS, GInetSocketAddressClass))

typedef struct _GInetSocketAddressClass {
    GSocketAddressClass parent_class;
} GInetSocketAddressClass;
typedef struct _GInetSocketAddressPrivate GInetSocketAddressPrivate;
struct _GInetSocketAddress {
    GSocketAddress parent_instance;
    GInetSocketAddressPrivate *priv;
};
extern GInetAddress *g_inet_socket_address_get_address(GInetSocketAddress *
						       address);
extern guint32 g_inet_socket_address_get_flowinfo(GInetSocketAddress *
						  address);
extern guint16 g_inet_socket_address_get_port(GInetSocketAddress *
					      address);
extern guint32 g_inet_socket_address_get_scope_id(GInetSocketAddress *
						  address);
extern GType g_inet_socket_address_get_type(void);
extern GSocketAddress *g_inet_socket_address_new(GInetAddress * address,
						 guint16 port);

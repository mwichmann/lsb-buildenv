
#define G_ZLIB_DECOMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressorClass))
#define G_IS_ZLIB_DECOMPRESSOR_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_ZLIB_DECOMPRESSOR))
#define G_ZLIB_DECOMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressor))
#define G_IS_ZLIB_DECOMPRESSOR(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_ZLIB_DECOMPRESSOR))
#define G_ZLIB_DECOMPRESSOR_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_ZLIB_DECOMPRESSOR, GZlibDecompressorClass))
#define G_TYPE_ZLIB_DECOMPRESSOR	(g_zlib_decompressor_get_type ())

typedef struct _GZlibDecompressorClass {
    GObjectClass parent_class;
} GZlibDecompressorClass;
extern GFileInfo *g_zlib_decompressor_get_file_info(GZlibDecompressor *
						    decompressor);
extern GType g_zlib_decompressor_get_type(void);
extern GZlibDecompressor *g_zlib_decompressor_new(GZlibCompressorFormat
						  format);

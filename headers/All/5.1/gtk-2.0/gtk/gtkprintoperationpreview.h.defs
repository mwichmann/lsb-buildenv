
#define __GTK_PRINT_OPERATION_PREVIEW_H__
#define GTK_TYPE_PRINT_OPERATION_PREVIEW	(gtk_print_operation_preview_get_type ())
#define GTK_PRINT_OPERATION_PREVIEW(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW, GtkPrintOperationPreview))
#define GTK_IS_PRINT_OPERATION_PREVIEW(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW))
#define GTK_PRINT_OPERATION_PREVIEW_GET_IFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), GTK_TYPE_PRINT_OPERATION_PREVIEW, GtkPrintOperationPreviewIface))

typedef struct _GtkPrintOperationPreview GtkPrintOperationPreview;
typedef struct _GtkPrintOperationPreviewIface {
    GTypeInterface g_iface;
    void (*ready) (void);
    void (*got_page_size) (void);
    void (*render_page) (void);
     gboolean(*is_selected) (void);
    void (*end_preview) (void);
    void (*_gtk_reserved1) (void);
    void (*_gtk_reserved2) (void);
    void (*_gtk_reserved3) (void);
    void (*_gtk_reserved4) (void);
    void (*_gtk_reserved5) (void);
    void (*_gtk_reserved6) (void);
    void (*_gtk_reserved7) (void);
} GtkPrintOperationPreviewIface;
extern void
gtk_print_operation_preview_end_preview(GtkPrintOperationPreview *
					preview);
extern GType gtk_print_operation_preview_get_type(void);
extern gboolean
gtk_print_operation_preview_is_selected(GtkPrintOperationPreview * preview,
					gint page_nr);
extern void
gtk_print_operation_preview_render_page(GtkPrintOperationPreview * preview,
					gint page_nr);

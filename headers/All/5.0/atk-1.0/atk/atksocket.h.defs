
#define ATK_TYPE_SOCKET	(atk_socket_get_type ())
#define ATK_SOCKET_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), ATK_TYPE_SOCKET, AtkSocketClass))
#define ATK_IS_SOCKET_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), ATK_TYPE_SOCKET))
#define ATK_SOCKET(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), ATK_TYPE_SOCKET, AtkSocket))
#define ATK_IS_SOCKET(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), ATK_TYPE_SOCKET))
#define ATK_SOCKET_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), ATK_TYPE_SOCKET, AtkSocketClass))

typedef struct _AtkSocket {
    AtkObject parent;
    gchar *embedded_plug_id;
} AtkSocket;
typedef struct _AtkSocketClass {
    AtkObjectClass parent_class;
    void (*embed) (AtkSocket * obj, gchar * plug_id);
} AtkSocketClass;
extern void atk_socket_embed(AtkSocket * obj, gchar * plug_id);
extern GType atk_socket_get_type(void);
extern gboolean atk_socket_is_occupied(AtkSocket * obj);
extern AtkObject *atk_socket_new(void);

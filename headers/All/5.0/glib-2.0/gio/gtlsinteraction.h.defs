
#define G_TYPE_TLS_INTERACTION	(g_tls_interaction_get_type ())
#define G_TLS_INTERACTION_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_TLS_INTERACTION, GTlsInteractionClass))
#define G_IS_TLS_INTERACTION_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_TLS_INTERACTION))
#define G_TLS_INTERACTION(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_TLS_INTERACTION, GTlsInteraction))
#define G_IS_TLS_INTERACTION(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_TLS_INTERACTION))
#define G_TLS_INTERACTION_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_TLS_INTERACTION, GTlsInteractionClass))

typedef struct _GTlsInteractionClass {
    GObjectClass parent_class;
     GTlsInteractionResult(*ask_password) (GTlsInteraction * interaction,
					   GTlsPassword * password,
					   GCancellable * cancellable,
					   GError * *error);
    void (*ask_password_async) (GTlsInteraction * interaction,
				GTlsPassword * password,
				GCancellable * cancellable,
				GAsyncReadyCallback callback,
				gpointer user_data);
     GTlsInteractionResult(*ask_password_finish) (GTlsInteraction *
						  interaction,
						  GAsyncResult * result,
						  GError * *error);
    gpointer padding[24];
} GTlsInteractionClass;
typedef struct _GTlsInteractionPrivate GTlsInteractionPrivate;
struct _GTlsInteraction {
    GObject parent_instance;
    GTlsInteractionPrivate *priv;
};
extern GTlsInteractionResult g_tls_interaction_ask_password(GTlsInteraction
							    * interaction,
							    GTlsPassword *
							    password,
							    GCancellable *
							    cancellable,
							    GError *
							    *error);
extern void g_tls_interaction_ask_password_async(GTlsInteraction *
						 interaction,
						 GTlsPassword * password,
						 GCancellable *
						 cancellable,
						 GAsyncReadyCallback
						 callback,
						 gpointer user_data);
extern GTlsInteractionResult
g_tls_interaction_ask_password_finish(GTlsInteraction * interaction,
				      GAsyncResult * result,
				      GError * *error);
extern GType g_tls_interaction_get_type(void);
extern GTlsInteractionResult
g_tls_interaction_invoke_ask_password(GTlsInteraction * interaction,
				      GTlsPassword * password,
				      GCancellable * cancellable,
				      GError * *error);


#define G_TYPE_DBUS_INTERFACE_SKELETON	(g_dbus_interface_skeleton_get_type ())
#define G_DBUS_INTERFACE_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_CAST((k), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeletonClass))
#define G_IS_DBUS_INTERFACE_SKELETON_CLASS(k)	(G_TYPE_CHECK_CLASS_TYPE ((k), G_TYPE_DBUS_INTERFACE_SKELETON))
#define G_DBUS_INTERFACE_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_CAST ((o), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeleton))
#define G_IS_DBUS_INTERFACE_SKELETON(o)	(G_TYPE_CHECK_INSTANCE_TYPE ((o), G_TYPE_DBUS_INTERFACE_SKELETON))
#define G_DBUS_INTERFACE_SKELETON_GET_CLASS(o)	(G_TYPE_INSTANCE_GET_CLASS ((o), G_TYPE_DBUS_INTERFACE_SKELETON, GDBusInterfaceSkeletonClass))

typedef struct _GDBusInterfaceSkeletonClass {
    GObjectClass parent_class;
    GDBusInterfaceInfo *(*get_info) (GDBusInterfaceSkeleton * interface_);
    GDBusInterfaceVTable *(*get_vtable) (GDBusInterfaceSkeleton *
					 interface_);
    GVariant *(*get_properties) (GDBusInterfaceSkeleton * interface_);
    void (*flush) (GDBusInterfaceSkeleton * interface_);
    gpointer vfunc_padding[8];
     gboolean(*g_authorize_method) (GDBusInterfaceSkeleton * interface_,
				    GDBusMethodInvocation * invocation);
    gpointer signal_padding[8];
} GDBusInterfaceSkeletonClass;
typedef struct _GDBusInterfaceSkeletonPrivate
    GDBusInterfaceSkeletonPrivate;
struct _GDBusInterfaceSkeleton {
    GObject parent_instance;
    GDBusInterfaceSkeletonPrivate *priv;
};
extern gboolean g_dbus_interface_skeleton_export(GDBusInterfaceSkeleton *
						 interface_,
						 GDBusConnection *
						 connection,
						 const gchar * object_path,
						 GError * *error);
extern void g_dbus_interface_skeleton_flush(GDBusInterfaceSkeleton *
					    interface_);
extern GDBusConnection
    *g_dbus_interface_skeleton_get_connection(GDBusInterfaceSkeleton *
					      interface_);
extern GList
    *g_dbus_interface_skeleton_get_connections(GDBusInterfaceSkeleton *
					       interface_);
extern GDBusInterfaceSkeletonFlags
g_dbus_interface_skeleton_get_flags(GDBusInterfaceSkeleton * interface_);
extern GDBusInterfaceInfo
    *g_dbus_interface_skeleton_get_info(GDBusInterfaceSkeleton *
					interface_);
extern const char
    *g_dbus_interface_skeleton_get_object_path(GDBusInterfaceSkeleton *
					       interface_);
extern GVariant
    *g_dbus_interface_skeleton_get_properties(GDBusInterfaceSkeleton *
					      interface_);
extern GType g_dbus_interface_skeleton_get_type(void);
extern GDBusInterfaceVTable
    *g_dbus_interface_skeleton_get_vtable(GDBusInterfaceSkeleton *
					  interface_);
extern gboolean
g_dbus_interface_skeleton_has_connection(GDBusInterfaceSkeleton *
					 interface_,
					 GDBusConnection * connection);
extern void g_dbus_interface_skeleton_set_flags(GDBusInterfaceSkeleton *
						interface_,
						GDBusInterfaceSkeletonFlags
						flags);
extern void g_dbus_interface_skeleton_unexport(GDBusInterfaceSkeleton *
					       interface_);
extern void
g_dbus_interface_skeleton_unexport_from_connection(GDBusInterfaceSkeleton *
						   interface_,
						   GDBusConnection *
						   connection);

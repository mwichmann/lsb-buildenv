
#define G_TYPE_POLLABLE_OUTPUT_STREAM	(g_pollable_output_stream_get_type ())
#define G_POLLABLE_OUTPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM, GPollableOutputStream))
#define G_IS_POLLABLE_OUTPUT_STREAM(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM))
#define G_POLLABLE_OUTPUT_STREAM_GET_INTERFACE(obj)	(G_TYPE_INSTANCE_GET_INTERFACE ((obj), G_TYPE_POLLABLE_OUTPUT_STREAM, GPollableOutputStreamInterface))

typedef struct _GPollableOutputStreamInterface {
    GTypeInterface g_iface;
     gboolean(*can_poll) (GPollableOutputStream * stream);
     gboolean(*is_writable) (GPollableOutputStream * stream);
    GSource *(*create_source) (GPollableOutputStream * stream,
			       GCancellable * cancellable);
     gssize(*write_nonblocking) (GPollableOutputStream * stream,
				 const void *buffer, gsize size,
				 GError * *error);
} GPollableOutputStreamInterface;
extern gboolean g_pollable_output_stream_can_poll(GPollableOutputStream *
						  stream);
extern GSource
    *g_pollable_output_stream_create_source(GPollableOutputStream * stream,
					    GCancellable * cancellable);
extern GType g_pollable_output_stream_get_type(void);
extern gboolean g_pollable_output_stream_is_writable(GPollableOutputStream
						     * stream);
extern gssize
g_pollable_output_stream_write_nonblocking(GPollableOutputStream * stream,
					   const void *buffer, gsize size,
					   GCancellable * cancellable,
					   GError * *error);

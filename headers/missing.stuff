? missing.stuff
Index: dirent.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/dirent.h,v
retrieving revision 1.1
diff -c -r1.1 dirent.h
*** dirent.h	1999/06/06 20:13:49	1.1
--- dirent.h	1999/07/06 16:18:26
***************
*** 1,4 ****
--- 1,8 ----
  
+ typedef struct {
+ 	int foo;
+ 	} DIR;
+ 
  int closedir (DIR *);
   DIR* opendir (const char *);
  struct dirent * readdir (DIR *);
Index: elf.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/elf.h,v
retrieving revision 1.1
diff -c -r1.1 elf.h
*** elf.h	1999/06/06 20:13:49	1.1
--- elf.h	1999/07/06 16:18:28
***************
*** 35,42 ****
  
  #define EI_NIDENT 16
  
! typedef struct
! {
    unsigned char	e_ident[EI_NIDENT];	/* Magic number and other info */
    Elf32_Half	e_type;			/* Object file type */
    Elf32_Half	e_machine;		/* Architecture */
--- 35,41 ----
  
  #define EI_NIDENT 16
  
! struct _Elf32_Ehdr {
    unsigned char	e_ident[EI_NIDENT];	/* Magic number and other info */
    Elf32_Half	e_type;			/* Object file type */
    Elf32_Half	e_machine;		/* Architecture */
***************
*** 51,57 ****
    Elf32_Half	e_shentsize;		/* Section header table entry size */
    Elf32_Half	e_shnum;		/* Section header table entry count */
    Elf32_Half	e_shstrndx;		/* Section header string table -1 */
! } Elf32_Ehdr;
  
  typedef struct
  {
--- 50,57 ----
    Elf32_Half	e_shentsize;		/* Section header table entry size */
    Elf32_Half	e_shnum;		/* Section header table entry count */
    Elf32_Half	e_shstrndx;		/* Section header string table -1 */
! };
! typedef struct _Elf32_Ehdr Elf32_Ehdr;
  
  typedef struct
  {
***************
*** 149,156 ****
  
  /* Section header.  */
  
! typedef struct
! {
    Elf32_Word	sh_name;		/* Section name (string tbl -1) */
    Elf32_Word	sh_type;		/* Section type */
    Elf32_Word	sh_flags;		/* Section flags */
--- 149,155 ----
  
  /* Section header.  */
  
! struct _Elf32_Shdr {
    Elf32_Word	sh_name;		/* Section name (string tbl -1) */
    Elf32_Word	sh_type;		/* Section type */
    Elf32_Word	sh_flags;		/* Section flags */
***************
*** 161,167 ****
    Elf32_Word	sh_info;		/* Additional section information */
    Elf32_Word	sh_addralign;		/* Section alignment */
    Elf32_Word	sh_entsize;		/* Entry size if section holds table */
! } Elf32_Shdr;
  
  typedef struct
  {
--- 160,168 ----
    Elf32_Word	sh_info;		/* Additional section information */
    Elf32_Word	sh_addralign;		/* Section alignment */
    Elf32_Word	sh_entsize;		/* Entry size if section holds table */
! } ;
! 
! typedef struct _Elf32_Shdr Elf32_Shdr;
  
  typedef struct
  {
Index: elf.h.defs
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/elf.h.defs,v
retrieving revision 1.3
diff -c -r1.3 elf.h.defs
*** elf.h.defs	1998/12/06 23:50:58	1.3
--- elf.h.defs	1999/07/06 16:18:30
***************
*** 35,42 ****
  
  #define EI_NIDENT 16
  
! typedef struct
! {
    unsigned char	e_ident[EI_NIDENT];	/* Magic number and other info */
    Elf32_Half	e_type;			/* Object file type */
    Elf32_Half	e_machine;		/* Architecture */
--- 35,41 ----
  
  #define EI_NIDENT 16
  
! struct __Elf32_Ehdr {
    unsigned char	e_ident[EI_NIDENT];	/* Magic number and other info */
    Elf32_Half	e_type;			/* Object file type */
    Elf32_Half	e_machine;		/* Architecture */
***************
*** 51,57 ****
    Elf32_Half	e_shentsize;		/* Section header table entry size */
    Elf32_Half	e_shnum;		/* Section header table entry count */
    Elf32_Half	e_shstrndx;		/* Section header string table index */
! } Elf32_Ehdr;
  
  typedef struct
  {
--- 50,57 ----
    Elf32_Half	e_shentsize;		/* Section header table entry size */
    Elf32_Half	e_shnum;		/* Section header table entry count */
    Elf32_Half	e_shstrndx;		/* Section header string table index */
! };
! typedef struct __Elf32_Ehdr Elf32_Ehdr;
  
  typedef struct
  {
***************
*** 149,156 ****
  
  /* Section header.  */
  
! typedef struct
! {
    Elf32_Word	sh_name;		/* Section name (string tbl index) */
    Elf32_Word	sh_type;		/* Section type */
    Elf32_Word	sh_flags;		/* Section flags */
--- 149,155 ----
  
  /* Section header.  */
  
! struct _Elf32_Shdr {
    Elf32_Word	sh_name;		/* Section name (string tbl index) */
    Elf32_Word	sh_type;		/* Section type */
    Elf32_Word	sh_flags;		/* Section flags */
***************
*** 161,167 ****
    Elf32_Word	sh_info;		/* Additional section information */
    Elf32_Word	sh_addralign;		/* Section alignment */
    Elf32_Word	sh_entsize;		/* Entry size if section holds table */
! } Elf32_Shdr;
  
  typedef struct
  {
--- 160,168 ----
    Elf32_Word	sh_info;		/* Additional section information */
    Elf32_Word	sh_addralign;		/* Section alignment */
    Elf32_Word	sh_entsize;		/* Entry size if section holds table */
! } ;
! 
! typedef struct _Elf32_Shdr Elf32_Shdr;
  
  typedef struct
  {
Index: elf.h.html
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/elf.h.html,v
retrieving revision 1.1
diff -c -r1.1 elf.h.html
*** elf.h.html	1999/06/06 20:13:49	1.1
--- elf.h.html	1999/07/06 16:18:35
***************
*** 41,48 ****
  
  <STRONG><FONT COLOR=#228B22>#define EI_NIDENT 16</FONT></STRONG>
  
! <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
! {
    unsigned char	e_ident[EI_NIDENT];	<FONT COLOR=#B22222>/* Magic number and other info */</FONT>
    Elf32_Half	e_type;			<FONT COLOR=#B22222>/* Object file type */</FONT>
    Elf32_Half	e_machine;		<FONT COLOR=#B22222>/* Architecture */</FONT>
--- 41,47 ----
  
  <STRONG><FONT COLOR=#228B22>#define EI_NIDENT 16</FONT></STRONG>
  
! <FONT COLOR=#4169E1>struct __Elf32_Ehdr</FONT> {
    unsigned char	e_ident[EI_NIDENT];	<FONT COLOR=#B22222>/* Magic number and other info */</FONT>
    Elf32_Half	e_type;			<FONT COLOR=#B22222>/* Object file type */</FONT>
    Elf32_Half	e_machine;		<FONT COLOR=#B22222>/* Architecture */</FONT>
***************
*** 57,63 ****
    Elf32_Half	e_shentsize;		<FONT COLOR=#B22222>/* Section header table entry size */</FONT>
    Elf32_Half	e_shnum;		<FONT COLOR=#B22222>/* Section header table entry count */</FONT>
    Elf32_Half	e_shstrndx;		<FONT COLOR=#B22222>/* Section header string table -1 */</FONT>
! } Elf32_Ehdr;
  
  <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
  {
--- 56,63 ----
    Elf32_Half	e_shentsize;		<FONT COLOR=#B22222>/* Section header table entry size */</FONT>
    Elf32_Half	e_shnum;		<FONT COLOR=#B22222>/* Section header table entry count */</FONT>
    Elf32_Half	e_shstrndx;		<FONT COLOR=#B22222>/* Section header string table -1 */</FONT>
! };
! <FONT COLOR=#4169E1>typedef struct __Elf32_Ehdr Elf32_Ehdr;</FONT>
  
  <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
  {
***************
*** 155,162 ****
  
  <FONT COLOR=#B22222>/* Section header.  */</FONT>
  
! <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
! {
    Elf32_Word	sh_name;		<FONT COLOR=#B22222>/* Section name (string tbl -1) */</FONT>
    Elf32_Word	sh_type;		<FONT COLOR=#B22222>/* Section type */</FONT>
    Elf32_Word	sh_flags;		<FONT COLOR=#B22222>/* Section flags */</FONT>
--- 155,161 ----
  
  <FONT COLOR=#B22222>/* Section header.  */</FONT>
  
! <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct _Elf32_Shdr</FONT> {
    Elf32_Word	sh_name;		<FONT COLOR=#B22222>/* Section name (string tbl -1) */</FONT>
    Elf32_Word	sh_type;		<FONT COLOR=#B22222>/* Section type */</FONT>
    Elf32_Word	sh_flags;		<FONT COLOR=#B22222>/* Section flags */</FONT>
***************
*** 167,173 ****
    Elf32_Word	sh_info;		<FONT COLOR=#B22222>/* Additional section information */</FONT>
    Elf32_Word	sh_addralign;		<FONT COLOR=#B22222>/* Section alignment */</FONT>
    Elf32_Word	sh_entsize;		<FONT COLOR=#B22222>/* Entry size if section holds table */</FONT>
! } Elf32_Shdr;
  
  <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
  {
--- 166,174 ----
    Elf32_Word	sh_info;		<FONT COLOR=#B22222>/* Additional section information */</FONT>
    Elf32_Word	sh_addralign;		<FONT COLOR=#B22222>/* Section alignment */</FONT>
    Elf32_Word	sh_entsize;		<FONT COLOR=#B22222>/* Entry size if section holds table */</FONT>
! } ;
! 
! <FONT COLOR=#4169E1>typedef struct _Elf32_Shdr Elf32_Shdr;</FONT>
  
  <FONT COLOR=#4169E1>typedef</FONT> <FONT COLOR=#4169E1>struct</FONT>
  {
Index: fcntl.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/fcntl.h,v
retrieving revision 1.1
diff -c -r1.1 fcntl.h
*** fcntl.h	1999/06/06 20:13:50	1.1
--- fcntl.h	1999/07/06 16:18:36
***************
*** 40,44 ****
  
  int creat (const char *, mode_t );
  int fcntl (int , int , ...);
! int open (const char *, int [, mode_t ]);
  
--- 40,44 ----
  
  int creat (const char *, mode_t );
  int fcntl (int , int , ...);
! int open (const char *, int, mode_t );
  
Index: ftw.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/ftw.h,v
retrieving revision 1.1
diff -c -r1.1 ftw.h
*** ftw.h	1999/06/06 20:13:50	1.1
--- ftw.h	1999/07/06 16:18:36
***************
*** 1,7 ****
  #define FTW_F   0
  #define FTW_D   1
  #define FTW_DNR 2
  #define FTW_NS  3
  
! ftw(const char *, int (*)(const char *, const struct stat*, int) int);
  
--- 1,9 ----
+ #include "sys/stat.h"
+ 
  #define FTW_F   0
  #define FTW_D   1
  #define FTW_DNR 2
  #define FTW_NS  3
  
! ftw(const char *, int (*)(const char *, const struct stat*, int), int);
  
Index: glob.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/glob.h,v
retrieving revision 1.1
diff -c -r1.1 glob.h
*** glob.h	1999/06/06 20:13:50	1.1
--- glob.h	1999/07/06 16:18:36
***************
*** 1,4 ****
--- 1,6 ----
  
+ typedef int glob_t;
+ 
  int glob (const char *, int , int (*) (const char * , int ), glob_t *);
  void globfree(glob_t *pglob);
  
Index: iconv.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/iconv.h,v
retrieving revision 1.1
diff -c -r1.1 iconv.h
*** iconv.h	1999/06/06 20:13:50	1.1
--- iconv.h	1999/07/06 16:18:36
***************
*** 1,4 ****
--- 1,6 ----
  
+ typedef int iconv_t;
+ 
  size_t iconv(iconv_t cd, const char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft);
  int iconv_close(iconv_t cd);
  iconv_t iconv_open(const char *tocode, const char *fromcode);
Index: langinfo.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/langinfo.h,v
retrieving revision 1.1
diff -c -r1.1 langinfo.h
*** langinfo.h	1999/06/06 20:13:50	1.1
--- langinfo.h	1999/07/06 16:18:37
***************
*** 1,3 ****
--- 1,4 ----
+ #include <locale.h>
  
  #define _NL_ITEM(category, index)	(((category) << 16) | (index))
  
Index: nl_types.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/nl_types.h,v
retrieving revision 1.1
diff -c -r1.1 nl_types.h
*** nl_types.h	1999/06/06 20:13:50	1.1
--- nl_types.h	1999/07/06 16:18:39
***************
*** 1,5 ****
--- 1,7 ----
  #define NL_SETD 1
  
+ typedef int nl_catd;
+ 
  
  int catclose(nl_catd catd);
  char *catgets(nl_catd catd, int set_id, int msg_id, const char *s);
Index: poll.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/poll.h,v
retrieving revision 1.1
diff -c -r1.1 poll.h
*** poll.h	1999/06/06 20:13:50	1.1
--- poll.h	1999/07/06 16:18:39
***************
*** 1,3 ****
--- 1,5 ----
  
+ typedef int nfds_t;
+ 
  int poll(struct pollfd fds[], nfds_t nfds, int timeout);
  
Index: pthread.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/pthread.h,v
retrieving revision 1.1
diff -c -r1.1 pthread.h
*** pthread.h	1999/06/06 20:13:50	1.1
--- pthread.h	1999/07/06 16:18:40
***************
*** 1,3 ****
--- 1,12 ----
+ typedef int pthread_t ;
+ typedef int pthread_key_t ;
+ typedef int pthread_attr_t ;
+ typedef int pthread_cond_t ;
+ typedef int pthread_condattr_t ;
+ typedef int pthread_mutex_t ;
+ typedef int pthread_mutexattr_t ;
+ typedef int pthread_rwlock_t ;
+ typedef int pthread_rwlockattr_t ;
  
  int pthread_attr_destroy(pthread_attr_t *attr);
  int pthread_attr_getdetachstate(const pthread_attr_t *attr, int *detachstate);
Index: search.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/search.h,v
retrieving revision 1.1
diff -c -r1.1 search.h
*** search.h	1999/06/06 20:13:50	1.1
--- search.h	1999/07/06 16:18:41
***************
*** 1,4 ****
--- 1,7 ----
  
+ typedef int ENTRY;
+ typedef int ACTION;
+ 
  int hcreate(size_t nel);
  void hdestroy(void);
  ENTRY *hsearch (ENTRY item, ACTION action);
Index: setjmp.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/setjmp.h,v
retrieving revision 1.1
diff -c -r1.1 setjmp.h
*** setjmp.h	1999/06/06 20:13:50	1.1
--- setjmp.h	1999/07/06 16:18:41
***************
*** 1,4 ****
--- 1,7 ----
  
+ typedef int jmp_buf;
+ typedef int sigjmp_buf;
+ 
  void _longjmp(jmp_buf env, int val);
  int _setjmp(jmp_buf env);
  void longjmp (jmp_buf , int );
Index: signal.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/signal.h,v
retrieving revision 1.1
diff -c -r1.1 signal.h
*** signal.h	1999/06/06 20:13:50	1.1
--- signal.h	1999/07/06 16:18:41
***************
*** 1,3 ****
--- 1,6 ----
+ #include "pthread.h"
+ #include "time.h"
+ 
  /* Signals.  */
  #define	SIGHUP		1	/* Hangup (POSIX).  */
  #define	SIGINT		2	/* Interrupt (ANSI).  */
***************
*** 46,51 ****
--- 49,63 ----
  #define SA_NOCLDSTOP    1
  #define SIG_SETMASK     2
  
+ typedef int siginfo;
+ typedef int siginfo_t;
+ typedef int sigset_t;
+ typedef int sighandler_t;
+ typedef int sigstack_t;
+ union sigval {
+ 	int	foo;
+ 	char	bar;
+ 	};
  
  int kill (pid_t , int );
  int killpg (int , int );
Index: stdarg.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/stdarg.h,v
retrieving revision 1.1
diff -c -r1.1 stdarg.h
*** stdarg.h	1999/06/06 20:13:50	1.1
--- stdarg.h	1999/07/06 16:18:42
***************
*** 1,5 ****
  
!  va_arg (va_list , );
  void va_end (va_list );
! void va_start (va_list , );
  
--- 1,7 ----
  
! typedef int va_list;
! 
! void va_arg (va_list );
  void va_end (va_list );
! void va_start (va_list );
  
Index: stdio.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/stdio.h,v
retrieving revision 1.1
diff -c -r1.1 stdio.h
*** stdio.h	1999/06/06 20:13:50	1.1
--- stdio.h	1999/07/06 16:18:42
***************
*** 1,3 ****
--- 1,5 ----
+ #include "stdarg.h"
+ 
  #define NULL    	0
  
  #define BUFSIZ  	8192
***************
*** 19,56 ****
  
  #define TMP_MAX 	238328
  
  extern FILE *stderr;
  extern FILE *stdin;
  extern FILE *stdout;
  
  
! void clearerr ( *);
  char * ctermid (char *);
  char * cuserid (char *);
  int fclose (FILE *);
   FILE* fdopen (int , const char *);
! int feof ( *);
! int ferror ( *);
! int fflush ( *);
! int fgetc ( *);
! int fgetpos ( *, fpos_t *);
! char * fgets (char *, int ,  *);
! int fileno ( *);
  void flockfile(FILE *file);
   FILE* fopen (const char *, const char *);
! int fprintf ( *, const char *, ...);
! int fputc (int ,  *);
! int fputs (const char *,  *);
! size_t fread (void *, size_t , size_t ,  *);
!  * freopen (const char *, const char *,  *);
! int fscanf ( *, const char *, ...);
! int fseek ( *, long int , int );
! int fsetpos ( *, const fpos_t );
! long int ftell ( *);
  int ftrylockfile(FILE *file);
  void funlockfile(FILE *file);
! size_t fwrite (const void *, size_t , size_t ,  *);
! int getc ( *);
  int getc_unlocked(FILE *stream);
  int getchar (void);
  int getchar_unlocked(void);
--- 21,61 ----
  
  #define TMP_MAX 	238328
  
+ typedef int FILE;
+ typedef int fpos_t;
+ 
  extern FILE *stderr;
  extern FILE *stdin;
  extern FILE *stdout;
  
  
! void clearerr ( FILE*);
  char * ctermid (char *);
  char * cuserid (char *);
  int fclose (FILE *);
   FILE* fdopen (int , const char *);
! int feof ( FILE*);
! int ferror ( FILE*);
! int fflush ( FILE*);
! int fgetc ( FILE*);
! int fgetpos ( FILE*, fpos_t *);
! char * fgets (char *, int ,  FILE*);
! int fileno ( FILE*);
  void flockfile(FILE *file);
   FILE* fopen (const char *, const char *);
! int fprintf ( FILE*, const char *, ...);
! int fputc (int ,  FILE*);
! int fputs (const char *,  FILE*);
! size_t fread (void *, size_t , size_t ,  FILE*);
!  * freopen (const char *, const char *,  FILE*);
! int fscanf ( FILE*, const char *, ...);
! int fseek ( FILE*, long int , int );
! int fsetpos ( FILE*, const fpos_t );
! long int ftell ( FILE*);
  int ftrylockfile(FILE *file);
  void funlockfile(FILE *file);
! size_t fwrite (const void *, size_t , size_t ,  FILE*);
! int getc ( FILE*);
  int getc_unlocked(FILE *stream);
  int getchar (void);
  int getchar_unlocked(void);
***************
*** 60,66 ****
  void perror (const char *);
  FILE *popen(const char *command, const char *mode);
  int printf (const char *, ...);
! int putc (int ,  *);
  int putc_unlocked(int c, FILE *stream);
  int putchar (int );
  int putchar_unlocked(int c);
--- 65,71 ----
  void perror (const char *);
  FILE *popen(const char *command, const char *mode);
  int printf (const char *, ...);
! int putc (int ,  FILE*);
  int putc_unlocked(int c, FILE *stream);
  int putchar (int );
  int putchar_unlocked(int c);
***************
*** 68,91 ****
  int putw(int w, FILE *stream);
  int remove (const char *);
  int rename (const char *, const char *);
! void rewind ( *);
  int scanf (const char *, ...);
! void setbuf ( *, char *);
! void setbuffer ( *, char *, size_t );
! void setlinebuf ( *);
! int setvbuf ( *, char *, int , size_t );
  int snprintf(char *s, size_t n, const char *format, ...);
  int sprintf (char *, const char *, ...);
  int sscanf (const char *, const char *, ...);
  char *tempnam(const char *dir, const char *pfx);
   * tmpfile (void);
  char * tmpnam (char *);
! int ungetc (int ,  *);
! int vfprintf ( *, const char *, va_list );
  int vprintf (const char *, va_list );
  int vsnprintf(char *s, size_t n, const char *format, va_list ap);
  int vsprintf (char *, const char *, va_list );
- size_t wcrtomb(char *s, wchar_t wc, mbstate_t *ps);
  int fseeko(FILE *stream, off_t offset, int whence);
  off_t ftello(FILE *stream);
  
--- 73,95 ----
  int putw(int w, FILE *stream);
  int remove (const char *);
  int rename (const char *, const char *);
! void rewind ( FILE*);
  int scanf (const char *, ...);
! void setbuf ( FILE*, char *);
! void setbuffer ( FILE*, char *, size_t );
! void setlinebuf ( FILE*);
! int setvbuf ( FILE*, char *, int , size_t );
  int snprintf(char *s, size_t n, const char *format, ...);
  int sprintf (char *, const char *, ...);
  int sscanf (const char *, const char *, ...);
  char *tempnam(const char *dir, const char *pfx);
   * tmpfile (void);
  char * tmpnam (char *);
! int ungetc (int ,  FILE*);
! int vfprintf ( FILE*, const char *, va_list );
  int vprintf (const char *, va_list );
  int vsnprintf(char *s, size_t n, const char *format, va_list ap);
  int vsprintf (char *, const char *, va_list );
  int fseeko(FILE *stream, off_t offset, int whence);
  off_t ftello(FILE *stream);
  
Index: time.h
===================================================================
RCS file: /home/anderson/CVSROOT/LSB/code/headers/time.h,v
retrieving revision 1.1
diff -c -r1.1 time.h
*** time.h	1999/06/06 20:13:51	1.1
--- time.h	1999/07/06 16:18:45
***************
*** 1,11 ****
  #define NULL    0
  
  char * asctime (const struct tm *);
  char *asctime_r(const struct tm *tm, char *buf);
  clock_t clock (void);
  char * ctime (const time_t *);
  char *ctime_r(const time_t *clock, char *buf);
! double difftime (time_t 1, time_t 0);
  struct tm * gmtime (const time_t *);
  struct tm *gmtime_r(const time_t *clock, struct tm *result);
  struct tm * localtime (const time_t *);
--- 1,18 ----
  #define NULL    0
  
+ typedef int timerid;
+ typedef int timer_t;
+ 
+ struct timespec {
+ 	int foo;
+ 	};
+ 
  char * asctime (const struct tm *);
  char *asctime_r(const struct tm *tm, char *buf);
  clock_t clock (void);
  char * ctime (const time_t *);
  char *ctime_r(const time_t *clock, char *buf);
! double difftime (time_t , time_t );
  struct tm * gmtime (const time_t *);
  struct tm *gmtime_r(const time_t *clock, struct tm *result);
  struct tm * localtime (const time_t *);

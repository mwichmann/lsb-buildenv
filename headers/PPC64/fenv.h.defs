
#define FE_INVALID	(1 << (31 - 2))
#define FE_OVERFLOW	(1 << (31 - 3))
#define FE_UNDERFLOW	(1 << (31 - 4))
#define FE_DIVBYZERO	(1 << (31 - 5))
#define FE_INEXACT	(1 << (31 - 6))

#define FE_ALL_EXCEPT	\
	(FE_INEXACT | FE_DIVBYZERO | FE_UNDERFLOW | FE_OVERFLOW | FE_INVALID)

#define FE_TONEAREST	0
#define FE_TOWARDZERO	1
#define FE_UPWARD	2
#define FE_DOWNWARD	3

typedef unsigned int fexcept_t;

typedef double fenv_t;

#define FE_DFL_ENV	(&amp;__fe_dfl_env)

extern int feclearexcept(int);
extern int fegetenv(fenv_t *);
extern int fegetexceptflag(fexcept_t *, int);
extern int fegetround(void);
extern int feholdexcept(fenv_t *);
extern int feraiseexcept(int);
extern int fesetenv(const fenv_t *);
extern int fesetexceptflag(const fexcept_t *, int);
extern int fesetround(int);
extern int fetestexcept(int);
extern int feupdateenv(const fenv_t *);
